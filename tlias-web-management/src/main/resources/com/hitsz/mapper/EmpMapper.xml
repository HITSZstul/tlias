<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.hitsz.mapper.EmpMapper">
    <update id="update">
        update emp
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="job != null">
                job = #{job},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id};
    </update>
    <delete id="deleteById">
        delete from emp where id in
        <foreach collection="empIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <!--进行条件查询 resultType 的标签作用是将查询结果放置在Emp的类中-->
    <select id="getRow" resultType="com.hitsz.pojo.Emp">
        select emp.*, dept.name deptName
        from emp left join dept on emp.dept_id = dept.id
        <!--where关键字：
        1.会自动根据条件是否成立，生成where关键字
        2.根据语句是否成立自动去除前面多余的and或者or-->
        <where>
            <if test="name!=null and name!='' ">
                emp.name like concat('%',#{name},'%') and
            </if>
            <if test="gender != null">
                emp.gender = #{gender} and
            </if>
            <if test="begin != null and end!=null">
                entry_date between #{begin} and #{end}
            </if>
        </where>
        order by emp.update_time desc
    </select>

    <!--resultMap手动封装，type属性代表，手动往哪个对象封装-全类名-->
    <!--主键用id标签-->
    <resultMap id="empResultMap" type="com.hitsz.pojo.Emp">
        <id column="id" property="id"/>
        <result column= "username" property="username" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="phone" property="phone" />
        <result column="job" property="job" />
        <result column="salary" property="salary" />
        <result column="image" property="image" />
        <result column="entry_date" property="entryDate" />
        <result column="dept_id" property="deptId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

<!--        ofType : one of type ,集合中元素的类型-->
        <collection property="exprList" ofType="com.hitsz.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_emp_id" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>

    <select id="query" resultMap="empResultMap">
        select
        e.* ,
        ee.emp_id ee_emp_id,
        ee.id ee_id,
        ee.begin ee_begin,
        ee.end ee_end,
        ee.job ee_job
        from emp e left join tlias.emp_expr ee on e.id = ee.emp_id where e.id = #{id};
    </select>
    <select id="getGender" resultType="java.util.Map">
        select
            (if(emp.gender = 1,'男性员工','女性员工')) name,
            count(0) value
        from emp group by gender
    </select>

    <!--将搜索的结果封装到类中，这里是只需要两个列，即两个属性，因此可以用map来封装
    这里的属性和值是封装到同一个map，其中键是列名，值是列的值-->
    <select id="getJobData" resultType="java.util.Map">
        select
            (case job when 1 then '讲师'
                when 2 then '班主任'
                when 3 then '学工主管'
                when 4 then '教研主管'
                when 5 then '咨询师
                'else 'other'end)pose,
            count(0) poscount
        from emp
        group by job
    </select>
    <select id="loginInfo" resultType="com.hitsz.pojo.Emp">
        select * from emp where username = #{username} and password = #{password}
    </select>
</mapper>